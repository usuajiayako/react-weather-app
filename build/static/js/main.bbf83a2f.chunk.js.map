{"version":3,"sources":["Title/Title.js","WeatherCard/WeatherCard.js","config.js","APIFile/APIFile.js","SearchEngine/SearchEngine.js","WeatherList/WeatherList.js","StyledButton.js","Global.js","App.js","index.js"],"names":["Title","className","size","WeatherCard","props","name","weather","wind","feelsLike","humidity","temp","config","fetchWeather","searchParam","fetch","then","response","json","catch","err","console","log","SearchEngine","state","newSearchParam","handleSubmit","event","preventDefault","updatePlace","setState","handleChange","target","value","onSubmit","this","placeholder","onChange","type","disabled","length","Component","WeatherList","error","result","main","Math","round","speed","feels_like","icon","desc","description","StyledButton","styled","button","primary","GlobalStyles","createGlobalStyle","App","changeTheme","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbf83a2f.chunk.js","sourcesContent":["import './Title.css';\nimport { FaCloudSun } from 'react-icons/fa';\n\nconst Title = () => {\n  return (\n    <header className=\"title\">\n      <h1>Weather Watcher</h1>\n      <FaCloudSun size={40} />\n    </header>\n  );\n};\n\nexport default Title;\n","import './WeatherCard.css';\n\nconst WeatherCard = (props) => {\n  return (\n    <div className=\"weather-card-container\">\n      <h3 className=\"name\">{props.name}</h3>\n      <p>\n        <span>Weather:</span> {props.weather}\n      </p>\n      <p>\n        <span>Wind Speed:</span> {props.wind}mph\n      </p>\n      <p>\n        <span>Feels Like:</span> {props.feelsLike}°C\n      </p>\n      <p>\n        <span>Humidity:</span> {props.humidity}%\n      </p>\n      <p>\n        <span>Temp:</span> {props.temp}°C\n      </p>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n","export const config = {\n  WEATHER_API_KEY:'90ffebd70998d4f4c09eb73b60691da0',\n}\n","import { config } from '../config';\n\nexport const fetchWeather = (searchParam) => {\n  return (\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${searchParam}&units=metric&appid=${config.WEATHER_API_KEY}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .catch((err) => console.log(err, 'err'))\n  );\n};\n","import React, { Component } from 'react';\nimport './SearchEngine.css';\n\nclass SearchEngine extends Component {\n  state = {\n    newSearchParam: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.updatePlace(this.state.newSearchParam);\n    this.setState({ newSearchParam: \"\" });\n  };\n\n  handleChange = (event) => {\n    this.setState({ newSearchParam: event.target.value });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"label\">\n          Location:\n          <input\n            className=\"input\"\n            placeholder=\"Search weather\"\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <button\n          className=\"submit\"\n          type=\"submit\"\n          disabled={this.state.newSearchParam.length < 4 ? true : false}\n        >\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchEngine;\n","import React, { Component } from 'react';\nimport './WeatherList.css';\n\nimport WeatherCard from '../WeatherCard/WeatherCard';\nimport { fetchWeather } from '../APIFile/APIFile';\nimport SearchEngine from '../SearchEngine/SearchEngine';\n\n\nclass WeatherList extends Component {\n  state = {\n    searchParam: 'Liverpool',\n    name: '',\n    weather: '',\n    wind: \"\",\n    feelsLike: 0,\n    humidity: 0,\n    temp: 0,\n    error: false,\n  };\n\n  componentDidMount() {\n    // console.log('mounting');\n    fetchWeather(this.state.searchParam)\n      .then((result) => {\n        this.setState({\n          name: result.name,\n          weather: result.weather[0].main,\n          wind: Math.round(result.wind.speed),\n          feelsLike: Math.round(result.main.feels_like),\n          humidity: result.main.humidity,\n          temp: Math.round(result.main.temp),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  updatePlace = (newSearchParam) => {\n    this.setState({ searchParam: newSearchParam });\n    fetchWeather(newSearchParam)\n      .then((result) => {\n        this.setState({\n          name: result.name,\n          weather: result.weather[0].main,\n          wind: Math.round(result.wind.speed),\n          feelsLike: Math.round(result.main.feels_like),\n          humidity: result.main.humidity,\n          temp: Math.round(result.main.temp),\n        });\n        this.setState({ error: false });\n      })\n      .catch((err) => {\n        this.setState({  error: true });\n        console.log(err);\n      });\n  };\n\n  render() {\n    // console.log('rendering');\n    return (\n      <main className=\"weather-list-container\">\n        <SearchEngine updatePlace={this.updatePlace} />\n        {this.state.error ? (\n          <h3>Sorry No Results Found </h3>\n        ) : (\n          <WeatherCard\n            name={this.state.name}\n            weather={this.state.weather}\n            icon={this.state.icon}\n            desc={this.state.description}\n            wind={this.state.wind}\n            feelsLike={this.state.feelsLike}\n            humidity={this.state.humidity}\n            temp={this.state.temp}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nexport default WeatherList;\n","import styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  border: 2px solid black;\n  border-radius: 5px;\n  font-family: 'Ubuntu', sans-serif;\n  margin-top: 20px;\n  background: ${(props) => (props.primary ? \"#F4B85D\" : \"#3AA4EA\" )};\n  `;\n\nexport default StyledButton;\n\n\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\nbody {\n  color: ${(props) => (props.primary ? \"white\" : \"black\" )};\n  background-color: ${(props) => (props.primary ? \"rgb(38, 87, 138)\" : \"#F4B85D\" )};\n}`;","import './App.css';\nimport Title from \"./Title/Title\";\nimport WeatherList from \"./WeatherList/WeatherList\";\nimport StyledButton from \"./StyledButton\";\nimport React, {Component} from \"react\";\nimport { GlobalStyles } from \"./Global\";\n\nclass App extends Component {\n  state = {\n    primary: true,\n  }\n\n  changeTheme = () => {\n    this.setState(({ primary }) => ({ primary: !primary }))\n  }\n\n  render(){\n    return(\n    <div className=\"App\">\n      <GlobalStyles primary={this.state.primary} />\n      <StyledButton primary={this.state.primary} onClick={this.changeTheme}>Change Theme Colour</StyledButton>\n      <Title />\n      <WeatherList />\n    </div>\n    )}\n\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}